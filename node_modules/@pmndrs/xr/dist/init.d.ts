/// <reference types="webxr" />
export type XRSessionFeatureRequest = 'required' | true | false;
export type XRSessionInitOptions = {
    /**
     * reference space type for the origin
     * @default "local-floor"
     */
    originReferenceSpace?: Extract<XRReferenceSpaceType, 'bounded-floor' | 'local-floor'>;
    /**
     * @default true
     */
    anchors?: XRSessionFeatureRequest;
    /**
     * @default true
     */
    handTracking?: XRSessionFeatureRequest;
    /**
     * @default true
     */
    layers?: XRSessionFeatureRequest;
    /**
     * @default true
     */
    meshDetection?: XRSessionFeatureRequest;
    /**
     * @default true
     */
    planeDetection?: XRSessionFeatureRequest;
    /**
     * @default false
     */
    depthSensing?: XRSessionFeatureRequest;
    /**
     * overrides the session init object
     * use with caution
     * @default undefined
     */
    customSessionInit?: XRSessionInit;
    /**
     * @default true
     */
    hitTest?: XRSessionFeatureRequest;
    /**
     * @default true
     */
    domOverlay?: XRSessionFeatureRequest | Element;
    /**
     * @default true
     */
    unbounded?: XRSessionFeatureRequest;
};
export declare function buildXRSessionInit(mode: XRSessionMode, domOverlayRoot: Element, { anchors, handTracking, layers, meshDetection, planeDetection, originReferenceSpace, customSessionInit, depthSensing, hitTest, unbounded, domOverlay, }?: XRSessionInitOptions): XRSessionInit;
