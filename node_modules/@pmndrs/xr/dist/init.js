export function buildXRSessionInit(mode, domOverlayRoot, { anchors = true, handTracking = true, layers = true, meshDetection = true, planeDetection = true, originReferenceSpace = 'local-floor', customSessionInit, depthSensing = false, hitTest = true, unbounded = true, domOverlay = true, } = {}) {
    if (customSessionInit != null) {
        return customSessionInit;
    }
    const requiredFeatures = [originReferenceSpace];
    const optionalFeatures = [];
    if (domOverlay instanceof Element) {
        domOverlay = true;
    }
    addXRSessionFeature(anchors, 'anchors', requiredFeatures, optionalFeatures);
    addXRSessionFeature(handTracking, 'hand-tracking', requiredFeatures, optionalFeatures);
    addXRSessionFeature(layers, 'layers', requiredFeatures, optionalFeatures);
    addXRSessionFeature(meshDetection, 'mesh-detection', requiredFeatures, optionalFeatures);
    addXRSessionFeature(planeDetection, 'plane-detection', requiredFeatures, optionalFeatures);
    addXRSessionFeature(depthSensing, 'depth-sensing', requiredFeatures, optionalFeatures);
    addXRSessionFeature(domOverlay, 'dom-overlay', requiredFeatures, optionalFeatures);
    addXRSessionFeature(hitTest, 'hit-test', requiredFeatures, optionalFeatures);
    if (mode != 'immersive-vr') {
        addXRSessionFeature(unbounded, 'unbounded', requiredFeatures, optionalFeatures);
    }
    return {
        requiredFeatures,
        optionalFeatures,
        domOverlay: { root: domOverlayRoot },
    };
}
function addXRSessionFeature(value, key, requiredFeatures, optionalFeatures) {
    if (value === false) {
        return;
    }
    if (value === true) {
        optionalFeatures.push(key);
        return;
    }
    requiredFeatures.push(key);
}
