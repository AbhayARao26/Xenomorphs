/// <reference types="webxr" />
import { bindXRInputSourceEvent, XRGazeState, XRScreenInputState, XRTransientPointerState } from '@pmndrs/xr/internals';
export type { XRTransientPointerState, XRScreenInputState, XRGazeState };
/**
 * hook for listening to xr input source events
 */
export declare function useXRInputSourceEvent(inputSource: XRInputSource | undefined, event: Parameters<typeof bindXRInputSourceEvent>[2], fn: () => void, deps: Array<any>): void;
/**
 * hook for getting the transient-pointer state
 * @param handedness the handedness that the XRHandState should have
 */
export declare function useXRTransientPointerState(handedness: XRHandedness): XRTransientPointerState | undefined;
/**
 * hook for getting the transient-pointer state
 */
export declare function useXRTransientPointerState(): XRTransientPointerState;
/**
 * hook for getting the gaze state
 */
export declare function useXRGazeState(): XRGazeState;
/**
 * hook for getting the screen-input state
 */
export declare function useXRScreenInputState(): XRScreenInputState;
