/// <reference types="webxr" />
import { XRHandModelOptions, XRHandState } from '@pmndrs/xr/internals';
import { ReactNode } from 'react';
import { Object3D } from 'three';
/**
 * hook for getting the XRHandState
 * @param handedness the handedness that the XRHandState should have
 */
export declare function useXRHandState(handedness: XRHandedness): XRHandState | undefined;
/**
 * hook for getting the XRHandState
 */
export declare function useXRHandState(): XRHandState;
export type { XRHandModelOptions };
/**
 * component for rendering a 3D model for the XRHand
 *
 * properties
 * - `colorWrite`
 * - `renderOrder`
 */
export declare const XRHandModel: import("react").ForwardRefExoticComponent<XRHandModelOptions & import("react").RefAttributes<Object3D<import("three").Object3DEventMap>>>;
/**
 * component for placing content in the hand anchored at a specific joint such as the index finger tip
 *
 * properties
 * - `joint` is the name of the joint (e.g. `"wrist"`)
 *
 * the component allows children to be placed inside for e.g. visualizing a tooltip over the index finger tip
 */
export declare const XRHandJoint: import("react").ForwardRefExoticComponent<{
    joint: XRHandJoint;
    children?: ReactNode;
} & import("react").RefAttributes<Object3D<import("three").Object3DEventMap>>>;
